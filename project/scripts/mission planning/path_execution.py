#!/usr/bin/env python

import rospy
from transform import Transform
from action import Crazyflie


class PathExecution:
    """ Class used to execute the path generated by the path planner """

    def __init__(self):

        # Initialize class objects
        self.tf = Transform()
        self.cf = Crazyflie()

    def execute_path(self, setpoints):

        tol_yaw = 5

        # Executing one set point in the path at a time.
        for setpoint in setpoints:
            goal_pose = self.tf.transform2odom(setpoint)
            goal_pose.header.seq = 0

            if goal_pose:
                # Rotate if the difference between current yaw and set point yaw is greater than a tolerance.
                if self.cf.yaw_difference(goal_pose.yaw) > tol_yaw:
                    self.cf.rotate(goal_pose.yaw)
                
                    print("goal yaw:", goal_pose.yaw, " actual yaw:", 
                        self.tf.quaternion2yaw(self.cf.current_pose.pose.orientation))
                # Fly straight to the next set point.
                self.cf.goTo(goal_pose)
